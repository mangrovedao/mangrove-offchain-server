diff --git a/dist/core.d.ts b/dist/core.d.ts
index 99d90b608a127085daffc30d6a60cebdef805995..85224c1df185c08943030e3e578f2eb6ea049e32 100644
--- a/dist/core.d.ts
+++ b/dist/core.d.ts
@@ -31,13 +31,16 @@ export interface Order {
     taker: TakerId;
     takerGot: Amount;
     takerGave: Amount;
-    penalty: Amount;
+    takerWants: Amount;
+    takerGives: Amount;
+    feePaid: Amount;
+    bounty: Amount;
     takenOffers: TakenOffer[];
 }
 export interface TakenOffer {
     id: OfferId;
-    takerWants: Amount;
-    takerGives: Amount;
+    takerGot: Amount;
+    takerGave: Amount;
     failReason?: OfferFailReason;
     posthookFailed?: boolean;
     posthookData?: string;
diff --git a/dist/strategyEvents.d.ts b/dist/strategyEvents.d.ts
index 514cbc4807aea91aca924df9d6a261fe77d51df5..6298cab27f212f32a0dd367a8803258dea6ffaa1 100644
--- a/dist/strategyEvents.d.ts
+++ b/dist/strategyEvents.d.ts
@@ -1,13 +1,14 @@
 import { Address, Amount, TxRef } from "@proximaone/stream-schema-base";
 import { OfferId, TakerId } from "./core";
 import * as core from "./core";
+import { Timestamp } from "@proximaone/stream-client-js";
 export declare type MultiUserStrategyEvent = (CreditMgvUser | CreditUserTokenBalance | DebitMgvUser | DebitUserTokenBalance | NewOwnedOffer) & {
     tx: TxRef;
     id: string;
     chainId: number;
     address: Address;
 };
-export declare type TakerStrategyEvent = OrderSummary & {
+export declare type TakerStrategyEvent = ( OrderSummary | SetExpiry ) & {
     tx: TxRef;
     id: string;
     chainId: number;
@@ -45,16 +46,34 @@ export interface NewOwnedOffer {
     offerId: OfferId;
     owner: Address;
 }
+
+export interface SetExpiry {
+    type: "SetExpiry",
+    mangroveId: core.MangroveId,
+    outboundToken: Address;
+    inboundToken: Address;
+    offerId: core.OfferId,
+    expiry: Timestamp.date
+}
+
 export interface OrderSummary {
     type: "OrderSummary";
     mangroveId: core.MangroveId;
     base: Address;
     quote: Address;
+    orderId: core.OrderId;
+    fillWants: boolean;
+    fillOrKill: boolean;
+    restingOrder: boolean;
     taker: TakerId;
     selling: boolean;
+    takerWants: Amount;
+    takerGives: Amount;
     takerGot: Amount;
     takerGave: Amount;
-    penalty: Amount;
+    bounty: Amount;
+    fee: Amount;
+    expiryDate: Timestamp.date;
     restingOrderId: OfferId;
 }
 //# sourceMappingURL=strategyEvents.d.ts.map
\ No newline at end of file
